name: Setup BoxLang CLI
description: Sets up BoxLang for GitHub Actions

branding:
  icon: terminal
  color: green

inputs:
  with-commandbox:
    description: "Whether to install with CommandBox (default: false)"
    required: false
    default: 'false'
  modules:
    description: "Space-delimited list of modules to install"
    required: false
    default: ""
  version:
    description: "BoxLang version to install"
    required: false
    default: 'latest'

runs:
  using: "composite"
  steps:

    - name: Set up Temurin JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Setup BoxLang ${{ inputs.version }}
      shell: bash
      id: install-boxlang
      env:
        TERM: xterm-256color
      run: |
        # Download BoxLang shell installer
        echo "Downloading BoxLang installer..."
        if ! curl -fsSL https://downloads.ortussolutions.com/ortussolutions/boxlang-quick-installer/install-boxlang.sh -o install-boxlang.sh; then
          echo "Failed to download BoxLang installer"
          exit 1
        fi

        # Verify the installer script exists
        if [[ ! -f install-boxlang.sh ]]; then
          echo "Installer script not found"
          exit 1
        fi

        # Make the script executable
        chmod +x install-boxlang.sh

        # Check if CommandBox is requested
        if [[ "${{ inputs.with-commandbox }}" == "true" ]]; then
          echo "Installing BoxLang with CommandBox"
          COMMAND_BOX_OPTION="--with-commandbox"˝
        else
          echo "Installing BoxLang without CommandBox"
          COMMAND_BOX_OPTION="--without-commandbox"
        fi

        # Call installer with desired version
        echo "Installing BoxLang version: ${{ inputs.version }}"
        if ! sudo -E PATH="$PATH" JAVA_HOME="$JAVA_HOME" ./install-boxlang.sh ${{ inputs.version }} $COMMAND_BOX_OPTION; then
          echo "BoxLang installation failed"
          echo "Java version:"
          java -version || echo "Java not found"
          echo "JAVA_HOME: ${JAVA_HOME:-not set}"
          exit 1
        fi

        # Install any BoxLang modules requested
        INSTALL_MODULES="${{ inputs.modules }}"
        if [[ -n "$INSTALL_MODULES" ]]; then
          echo "Installing modules: $INSTALL_MODULES"
          if ! install-bx-module $INSTALL_MODULES; then
            echo "Module installation failed"
            exit 1
          fi
          echo "Modules installed successfully"
        fi

        # Verify BoxLang is on the PATH and show version
        echo "Verifying BoxLang installation..."
        if ! boxlang --version; then
          echo "BoxLang installation verification failed"
          exit 1
        fi

        # Export BOXLANG_HOME to environment
        echo "BOXLANG_HOME=$HOME/.boxlang" >> $GITHUB_ENV

        # Capture version and installation path
        BOXLANG_VERSION=$(boxlang --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?' || echo "unknown")
        BOXLANG_PATH=$(which boxlang || echo "unknown")

        # Set outputs
        echo "version=$BOXLANG_VERSION" >> $GITHUB_OUTPUT
        echo "path=$BOXLANG_PATH" >> $GITHUB_OUTPUT

        # Clean up
        rm -f install-boxlang.sh
        echo "BoxLang setup completed successfully"

outputs:
  boxlang-version:
    description: "The version of BoxLang that was installed"
    value: ${{ steps.install-boxlang.outputs.version }}
  installation-path:
    description: "The path where BoxLang was installed"
    value: ${{ steps.install-boxlang.outputs.path }}
